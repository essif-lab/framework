// Purposes:
// - replace varieties of specific TEv2 phrases (e.g. plurals, word combinations) with the appropriate `reftext` references

// This is a script that can be run by the Batch Replacer extension of VSCode.
// You DO need to install the 'case conversion hack' files,
// which you can find at https://github.com/angelo-mollame/batch-replacer/issues/11.
// Press Ctrl-Shift-P as you are editing this script, then search for `Batch Replacer`, and execute it.
// Please note that if there are many files, execution may take some time...

// Executing the script will do the following replacements consecutively:
// 1. [to be revised]

// Complex regular expressions can be created using variables. Variables are applied to the entire script, and should be defined at the beginning of the script. Variables are defined as ... = "..." and are used as %{...}. Variables can only be used in the replace and replace-regex instructions.
// variables can reference themselves and be overwritten - see documentation of 'batch replacer' extension

// ensure that end-of-file matches a newline
eof = "(?:$(?![\r\n]))"
// `~%{ss}` stands for ~, ~s, ~'s, ~’s, ~(s)
ss = "(?:['’]?s|\(s\))?"
// ~%{yies} stands for ~y, ~y's, ~y’s, ~ies
yies = "(y|y['’]s|ies)"

// Generic reftext syntax (for TOIP tt-tools)
beg1 = "(?<=[^`\\])\[(?=[^@\]]+\]\([^\)]*@[^@\)]*\))"
ref1 = "%{beg1}(?P<showtext>.+?)\]\((?P<id>[a-z0-9_-]+?)(?:#(?P<headingid>[a-z0-9_-]+?))?@(?P<scopetag>[a-z0-9_-]*)(?::(?P<vsn>[a-z0-9_-]+?))?\)"
// Alternative reftext syntax
beg2 = "(?<=[^\\@()=`])\[(?=[^@\]]+@[^@\]]*\](?:\([^@\)]+\))?)"
ref2 = "%{beg2}(?P<showtext>.+?)@(?P<scopetag>[a-z0-9_-]*)(?::(?P<vsn>[a-z0-9_-]+?))?\](?P<ref>\((?P<id>[a-z0-9_-]*)(?::(?P<headingid>[a-z0-9_-]+?))?\))?"
//
reftext = "(ref1|ref2)(?=[^`]|%{eof})"

// If you do not specify the files to work on, the replace will be global (throughout the workspace).
// `filter "document.txt"`           - document.txt file in the root folder
// `filter "Documents/document.txt"` - document.txt file in the Documents folder in the root folder
// `filter "**/document.txt"`        - document.txt files anywhere
// `filter "*.txt"`                  - any .txt file in the root folder
// `filter "**/*.txt"`               - any .txt file
// `filter "**/*.adl, **/*.ifc"`     - any .adl and any .ifc file

// filter "docs/terms/identity.md"
// filter "docs/**/*.md"
filter "docs/tev2/**/*.md"

// Convert quotes so that only two types remain: ' and " (which is helpful in specifying further regexes...)
replace-regex "[‘’]"
with "'"
// Convert the common typo `toin` to `tion`
replace-regex "toin"
with "tion"

replace-regex "(%{beg}(identif|)%{ies}))"
with "$1"
