"use strict";(self.webpackChunkessif_lab=self.webpackChunkessif_lab||[]).push([[5544],{3905:(e,t,a)=>{a.d(t,{Zo:()=>h,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},h=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),m=p(a),d=n,f=m["".concat(l,".").concat(d)]||m[d]||c[d]||o;return a?r.createElement(f,i(i({ref:t},h),{},{components:a})):r.createElement(f,i({ref:t},h))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:n,i[1]=s;for(var p=2;p<o;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var r=a(7294),n=a(6010);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:a,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(o.tabItem,i),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>b});var r=a(7462),n=a(7294),o=a(6010),i=a(2466),s=a(6550),l=a(1980),p=a(7392),h=a(12);function m(e){return function(e){var t,a;return null!=(t=null==(a=n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:a.filter(Boolean))?t:[]}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function c(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=null!=t?t:m(a);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:a}=e;const r=(0,s.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=a?a:null}({queryString:t,groupId:a});return[(0,l._X)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function u(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,o=c(e),[i,s]=(0,n.useState)((()=>function(e){var t;let{defaultValue:a,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!d({value:a,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+a+'" but none of its children has the corresponding value. Available values are: '+r.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return a}const n=null!=(t=r.find((e=>e.default)))?t:r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[l,p]=f({queryString:a,groupId:r}),[m,u]=function(e){let{groupId:t}=e;const a=function(e){return e?"docusaurus.tab."+e:null}(t),[r,o]=(0,h.Nk)(a);return[r,(0,n.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:r}),k=(()=>{const e=null!=l?l:m;return d({value:e,tabValues:o})?e:null})();(0,n.useLayoutEffect)((()=>{k&&s(k)}),[k]);return{selectedValue:i,selectValue:(0,n.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error("Can't select invalid tab value="+e);s(e),p(e),u(e)}),[p,u,o]),tabValues:o}}var k=a(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function N(e){let{className:t,block:a,selectedValue:s,selectValue:l,tabValues:p}=e;const h=[],{blockElementScrollPositionUntilNextRender:m}=(0,i.o5)(),c=e=>{const t=e.currentTarget,a=h.indexOf(t),r=p[a].value;r!==s&&(m(t),l(r))},d=e=>{var t;let a=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{var r;const t=h.indexOf(e.currentTarget)+1;a=null!=(r=h[t])?r:h[0];break}case"ArrowLeft":{var n;const t=h.indexOf(e.currentTarget)-1;a=null!=(n=h[t])?n:h[h.length-1];break}}null==(t=a)||t.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},p.map((e=>{let{value:t,label:a,attributes:i}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>h.push(e),onKeyDown:d,onClick:c},i,{className:(0,o.Z)("tabs__item",g.tabItem,null==i?void 0:i.className,{"tabs__item--active":s===t})}),null!=a?a:t)})))}function v(e){let{lazy:t,children:a,selectedValue:r}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function y(e){const t=u(e);return n.createElement("div",{className:(0,o.Z)("tabs-container",g.tabList)},n.createElement(N,(0,r.Z)({},e,t)),n.createElement(v,(0,r.Z)({},e,t)))}function b(e){const t=(0,k.Z)();return n.createElement(y,(0,r.Z)({key:String(t)},e))}},265:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,mark:()=>h,metadata:()=>s,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));a(4996),a(4866),a(5162);const o={id:"mrgt",sidebar_label:"MR Glossary Generation",hide_table_of_contents:!0,scopetag:"tev2",date:20221127},i="Machine Readable Glossary Generation Tool",s={unversionedId:"tev2/spec-tools/mrgt",id:"tev2/spec-tools/mrgt",title:"Machine Readable Glossary Generation Tool",description:"The current TEv2 website is located at https://tno-terminology-design.github.io/tev2-specifications/docs/overview/overview-tev2",source:"@site/docs/tev2/spec-tools/21-mrgt.md",sourceDirName:"tev2/spec-tools",slug:"/tev2/spec-tools/mrgt",permalink:"/framework/docs/tev2/spec-tools/mrgt",draft:!1,editUrl:"https://github.com/essif-lab/framework/blob/master/docs/tev2/spec-tools/21-mrgt.md",tags:[],version:"current",lastUpdatedBy:"Rieks",lastUpdatedAt:1701690263,formattedLastUpdatedAt:"Dec 4, 2023",sidebarPosition:21,frontMatter:{id:"mrgt",sidebar_label:"MR Glossary Generation",hide_table_of_contents:!0,scopetag:"tev2",date:20221127}},l={},p=[{value:"Installing the Tool",id:"installing-the-tool",level:2},{value:"Calling the Tool",id:"calling-the-tool",level:2},{value:"Generating an MRG",id:"generating-an-mrg",level:2},{value:"Creating an MRG Entry",id:"creating-an-mrg-entry",level:3},{value:"Copying an MRG Entry from an existing MRG",id:"copying-an-mrg-entry-from-an-existing-mrg",level:4},{value:"Constructing an MRG Entry from a Curated Text",id:"constructing-an-mrg-entry-from-a-curated-text",level:4},{value:"Exceptions, Warnings, and Logging",id:"exceptions",level:2},{value:"Notes",id:"notes",level:2}],h=e=>{let{children:t}=e;return(0,n.kt)("span",{style:{color:"black",backgroundColor:"yellow",padding:"0.2rem",borderRadius:"2px"}},t)},m={toc:p,mark:h},c="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(c,(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"machine-readable-glossary-generation-tool"},"Machine Readable Glossary Generation Tool"),(0,n.kt)("admonition",{title:"This page is deprecated.",type:"danger"},(0,n.kt)("p",{parentName:"admonition"},"The current TEv2 website is located at ",(0,n.kt)("a",{parentName:"p",href:"https://tno-terminology-design.github.io/tev2-specifications/docs/overview/overview-tev2"},"https://tno-terminology-design.github.io/tev2-specifications/docs/overview/overview-tev2"))),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"The entire section on Terminology Engine v 2 (TEv2) is still under construction.",(0,n.kt)("br",null),"\nAs TEv2 is not (yet) available, the texts that specify the tool are still 'raw', i.e. not yet processed.",(0,n.kt)("br",null),(0,n.kt)("a",{parentName:"p",href:"@"},"readers")," will need to see through some (currently unprocessed) notational conventions.")),(0,n.kt)("p",null,"The ",(0,n.kt)("strong",{parentName:"p"},"Machine Readable Glossary generation Tool (",(0,n.kt)("a",{parentName:"strong",href:"@"},"MRGT"),")")," generates a Machine Readable Glossary or ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG"),") for (a specific version of) the ",(0,n.kt)("a",{href:"/framework/docs/terms/terminology",hovertext:"Terminology (in/of a Scope): the set of terms that are used within a single Scope to refer to a single Definition, enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology")," of a specific ",(0,n.kt)("a",{href:"/framework/docs/terms/scope",hovertext:"Scope: the extent of the area or subject matter (which we use, e.g., to define Patterns, Concepts, Terms and Glossaries in, but it serves other purposes as well)."},"scope")," into a specific, well-defined ",(0,n.kt)("a",{parentName:"p",href:"/docs/tev2/spec-files/mrg"},"format"),". An ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG")," contains so-called ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG entries")," for every ",(0,n.kt)("a",{href:"/framework/docs/terms/term",hovertext:"Term: a word or phrase (i.e.: text) that is used in at least one Scope/context to represent a specific Concept."},"term")," in its ",(0,n.kt)("a",{href:"/framework/docs/terms/scope",hovertext:"Scope: the extent of the area or subject matter (which we use, e.g., to define Patterns, Concepts, Terms and Glossaries in, but it serves other purposes as well)."},"scope"),", which represent not only ",(0,n.kt)("a",{href:"/framework/docs/terms/concept",hovertext:"Concept: the ideas/thoughts behind a classification of Entities (what makes Entities in that class 'the same')."},"concepts")," but also other ",(0,n.kt)("a",{parentName:"p",href:"@"},"knowledge artifacts")," of other kinds, such as ",(0,n.kt)("a",{href:"/framework/docs/terms/mental-model",hovertext:"Mental Model (Pattern): A description, both casual and formal, of a set of Concepts (ideas), relations between them, and constraints, that together form a coherent and consistent 'viewpoint', or 'way of thinking' about a certain topic."},"mental models")," and ",(0,n.kt)("a",{parentName:"p",href:"@"},"use cases"),"."),(0,n.kt)("p",null,"The (newly generated) ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG")," is meant to be processed by the other tools in the ",(0,n.kt)("a",{parentName:"p",href:"/docs/tev2/tev2-toolbox"},"toolbox"),", regardless of whether such tools are called from within the context of another ",(0,n.kt)("a",{href:"/framework/docs/terms/scope",hovertext:"Scope: the extent of the area or subject matter (which we use, e.g., to define Patterns, Concepts, Terms and Glossaries in, but it serves other purposes as well)."},"scope"),". As it contains every ",(0,n.kt)("a",{href:"/framework/docs/terms/term",hovertext:"Term: a word or phrase (i.e.: text) that is used in at least one Scope/context to represent a specific Concept."},"term")," that is used in the ",(0,n.kt)("a",{href:"/framework/docs/terms/scope",hovertext:"Scope: the extent of the area or subject matter (which we use, e.g., to define Patterns, Concepts, Terms and Glossaries in, but it serves other purposes as well)."},"scope"),", and includes all the relevant meta-data, an ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG")," serves as the single, authoritative source of that (version of the) ",(0,n.kt)("a",{href:"/framework/docs/terms/scope",hovertext:"Scope: the extent of the area or subject matter (which we use, e.g., to define Patterns, Concepts, Terms and Glossaries in, but it serves other purposes as well)."},"scope's")," ",(0,n.kt)("a",{href:"/framework/docs/terms/terminology",hovertext:"Terminology (in/of a Scope): the set of terms that are used within a single Scope to refer to a single Definition, enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology"),"."),(0,n.kt)("p",null,"There is currently one (JAVA) implementation of the tool:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"the repo is ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/trustoverip/ctwg-toolkit-mrg/"},"here")),(0,n.kt)("li",{parentName:"ul"},"the documentation is ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/trustoverip/ctwg-toolkit-mrg#readme"},"here")),(0,n.kt)("li",{parentName:"ul"},"the (deprecated) specifications for this tool are ",(0,n.kt)("a",{parentName:"li",href:"https://essif-lab.github.io/framework/docs/tev2/spec-tools/mrgt"},"here"))),(0,n.kt)("p",null,"A new implementation is envisaged (but not yet available), which will be built similar to the ",(0,n.kt)("a",{parentName:"p",href:"@"},"TRRT")," and ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG Importer"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"the repo is ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/tno-terminology-design/mrgt"},"here"),"."),(0,n.kt)("li",{parentName:"ul"},"the documentation is ","[",(0,n.kt)("mark",null,"tbd"),"]",".")),(0,n.kt)("h2",{id:"installing-the-tool"},"Installing the Tool"),(0,n.kt)("p",null,"The tool can be installed from the command line and made globally available by executing"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"npm install tno-terminology-design/mrgt -g\n")),(0,n.kt)("h2",{id:"calling-the-tool"},"Calling the Tool"),(0,n.kt)("p",null,"The behavior of the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGT")," can be configured per call e.g. by a configuration file and/or command-line parameters. The command-line syntax is as follows:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"mrgt [ <paramlist> ]\n")),(0,n.kt)("p",null,"where:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<paramlist>")," (optional) is a list of key-value pairs")),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Legend"),(0,n.kt)("p",null,"The columns in the following table are defined as follows:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"Key"))," is the text to be used as a key."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"Value"))," represents the kind of value to be used."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"Req'd"))," specifies whether (",(0,n.kt)("inlineCode",{parentName:"li"},"Y"),") or not (",(0,n.kt)("inlineCode",{parentName:"li"},"n"),") the field is required to be present when the tool is being called. If required, it MUST either be present in the configuration file, or as a command-line parameter."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"strong"},"Description"))," specifies the meaning of the ",(0,n.kt)("inlineCode",{parentName:"li"},"Value")," field, and other things you may need to know, e.g. why it is needed, a required syntax, etc."))),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Key"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Value"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Req'd"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"config")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<path>")),(0,n.kt)("td",{parentName:"tr",align:"center"},"n"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Path (including the filename) of the tool's (YAML) configuration file. This file contains the default key-value pairs to be used. Allowed keys (and the associated values) are documented in this table. Command-line arguments override key-value pairs specified in the configuration file. This parameter MUST NOT appear in the configuration file itself.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"scopedir")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<path>")),(0,n.kt)("td",{parentName:"tr",align:"center"},"Y"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Path of the ",(0,n.kt)("a",{parentName:"td",href:"@"},"scope directory")," from which the tool is called. It MUST contain the ",(0,n.kt)("a",{parentName:"td",href:"@"},"SAF")," for that ",(0,n.kt)("a",{href:"/framework/docs/terms/scope",hovertext:"Scope: the extent of the area or subject matter (which we use, e.g., to define Patterns, Concepts, Terms and Glossaries in, but it serves other purposes as well)."},"scope"),", which we will refer to as the 'current scope' for the ",(0,n.kt)("a",{parentName:"td",href:"@"},"MRG importer"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"vsntag")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<vsntag>")),(0,n.kt)("td",{parentName:"tr",align:"center"},"n"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"@"},"versiontag")," for which the ",(0,n.kt)("a",{parentName:"td",href:"@"},"MRG")," needs to be (re)generated. When omitted, an ",(0,n.kt)("a",{parentName:"td",href:"@"},"MRG")," will be generated for every version of the ",(0,n.kt)("a",{href:"/framework/docs/terms/terminology",hovertext:"Terminology (in/of a Scope): the set of terms that are used within a single Scope to refer to a single Definition, enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology")," that is specified in the ",(0,n.kt)("a",{parentName:"td",href:"/docs/tev2/spec-files/saf#versions"},"versions section")," of the ",(0,n.kt)("a",{parentName:"td",href:"@"},"SAF"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"onNotExist")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<action>")),(0,n.kt)("td",{parentName:"tr",align:"center"},"n"),(0,n.kt)("td",{parentName:"tr",align:"left"},"specifies the action to take in case a ",(0,n.kt)("inlineCode",{parentName:"td"},"vsntag")," was specified, but wasn't found in the ",(0,n.kt)("a",{parentName:"td",href:"@"},"SAF"),". Default is ",(0,n.kt)("inlineCode",{parentName:"td"},"'throw'"),".")))),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"<action>")," parameter can take the following values:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"th"},"<action>")),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"'throw'")),(0,n.kt)("td",{parentName:"tr",align:"left"},"an error is thrown (an exception is raised), and processing will stop.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"'warn'")),(0,n.kt)("td",{parentName:"tr",align:"left"},"a message is displayed (and logged) and processing continues.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"'log'")),(0,n.kt)("td",{parentName:"tr",align:"left"},"a message is written to a log(file) and processing continues.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"'ignore'")),(0,n.kt)("td",{parentName:"tr",align:"left"},"processing continues as if nothing happened.")))),(0,n.kt)("h2",{id:"generating-an-mrg"},"Generating an MRG"),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGT")," starts by reading the ",(0,n.kt)("a",{parentName:"p",href:"@"},"SAF")," that exists in the ",(0,n.kt)("a",{parentName:"p",href:"@"},"scopedir")," that was provided as one of the calling parameters. If a ",(0,n.kt)("inlineCode",{parentName:"p"},"vsntag")," argument is provided, it will search the ",(0,n.kt)("a",{parentName:"p",href:"/docs/tev2/spec-files/saf#versions"},"versions section")," of the ",(0,n.kt)("a",{parentName:"p",href:"@"},"SAF")," to find the corresponding entry. This corresponding entry will have the value of the ",(0,n.kt)("inlineCode",{parentName:"p"},"vsntag")," parameter either in its ",(0,n.kt)("inlineCode",{parentName:"p"},"vsntag")," field, or it is one of the elements in the ",(0,n.kt)("inlineCode",{parentName:"p"},"altvsntags")," field. If the ",(0,n.kt)("a",{parentName:"p",href:"@"},"SAF")," does not have a corresponding entry, the action specified in the ",(0,n.kt)("inlineCode",{parentName:"p"},"onNotExist")," parameter will determine whether or not (and how) to proceed."),(0,n.kt)("p",null,"The corresponding entry in the ",(0,n.kt)("a",{parentName:"p",href:"@"},"SAF")," specifies (a specific version of) a ",(0,n.kt)("a",{href:"/framework/docs/terms/terminology",hovertext:"Terminology (in/of a Scope): the set of terms that are used within a single Scope to refer to a single Definition, enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology"),". It not only includes meta-data for that ",(0,n.kt)("a",{href:"/framework/docs/terms/terminology",hovertext:"Terminology (in/of a Scope): the set of terms that are used within a single Scope to refer to a single Definition, enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology"),", but also the set of '",(0,n.kt)("a",{parentName:"p",href:"@"},"term selection criteria"),"' that specify how the ",(0,n.kt)("a",{href:"/framework/docs/terms/terminology",hovertext:"Terminology (in/of a Scope): the set of terms that are used within a single Scope to refer to a single Definition, enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology")," needs to be ",(0,n.kt)("a",{parentName:"p",href:"/docs/tev2/spec-tools/terminology-construction"},"constructed"),", and the file to which the result needs to be written."),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG")," is then created as follows (starting with an empty file):"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"The ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG")," ",(0,n.kt)("inlineCode",{parentName:"li"},"terminology")," section is created, by copying ",(0,n.kt)("a",{parentName:"li",href:"/docs/tev2/spec-files/mrg#mrg-terminology"},"relevant fields")," from the ",(0,n.kt)("inlineCode",{parentName:"li"},"terminology")," section in the ",(0,n.kt)("a",{parentName:"li",href:"@"},"SAF"),"."),(0,n.kt)("li",{parentName:"ol"},"Then, ",(0,n.kt)("a",{parentName:"li",href:"/docs/tev2/spec-tools/terminology-construction"},"terminology construction")," takes place, which can be thought of as constructing a set of tuples ",(0,n.kt)("inlineCode",{parentName:"li"},"{ [term, grouptags] }"),", where ",(0,n.kt)("inlineCode",{parentName:"li"},"term")," ",(0,n.kt)("a",{href:"/framework/docs/terms/identify",hovertext:"Identify: an Act, by or on behalf of a Party, that results in the selection of either (a) a single Partial identity that the party Owns, given some (observed or received) data, or (b) a single Entity from a given set of entities that is the Subject of a specified Partial identity that the party Owns."},"identifies")," (the ",(0,n.kt)("a",{parentName:"li",href:"@"},"curated text")," that documents) the particular ",(0,n.kt)("a",{parentName:"li",href:"@"},"knowledge artifact"),", and ",(0,n.kt)("inlineCode",{parentName:"li"},"grouptags")," is a set of ",(0,n.kt)("a",{parentName:"li",href:"@"},"grouptags")," associated with that tuple."),(0,n.kt)("li",{parentName:"ol"},"For every tuple in this set, an ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG entry")," is created, and added to the ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG")," under construction. The structure of each such ",(0,n.kt)("a",{parentName:"li",href:"mrg-entry@"},"entry")," depends on the type of the ",(0,n.kt)("a",{parentName:"li",href:"@"},"knowledge artifact")," that the ",(0,n.kt)("a",{href:"/framework/docs/terms/term",hovertext:"Term: a word or phrase (i.e.: text) that is used in at least one Scope/context to represent a specific Concept."},"term")," represents, as the ",(0,n.kt)("a",{parentName:"li",href:"@"},"header")," of a ",(0,n.kt)("a",{parentName:"li",href:"@"},"curated text")," depends on that type.")),(0,n.kt)("p",null,"After the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG")," has been created, it is written to the file ",(0,n.kt)("inlineCode",{parentName:"p"},"mrg.<scopetag>.<vsntag>.yaml"),", where:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<scopetag>")," is the ",(0,n.kt)("a",{parentName:"li",href:"@"},"scopetag")," that is used within the ",(0,n.kt)("a",{href:"/framework/docs/terms/scope",hovertext:"Scope: the extent of the area or subject matter (which we use, e.g., to define Patterns, Concepts, Terms and Glossaries in, but it serves other purposes as well)."},"scope")," to refer to itself. Its value can be found in the ",(0,n.kt)("inlineCode",{parentName:"li"},"scopetag"),"-field in the ",(0,n.kt)("a",{parentName:"li",href:"docs/tev2/spec-files/saf#terminology"},"scope section")," of the ",(0,n.kt)("a",{parentName:"li",href:"@"},"SAF"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<vsntag>")," is the ",(0,n.kt)("a",{parentName:"li",href:"@"},"versiontag")," that ",(0,n.kt)("a",{href:"/framework/docs/terms/identify",hovertext:"Identify: an Act, by or on behalf of a Party, that results in the selection of either (a) a single Partial identity that the party Owns, given some (observed or received) data, or (b) a single Entity from a given set of entities that is the Subject of a specified Partial identity that the party Owns."},"identifies")," the version of the ",(0,n.kt)("a",{href:"/framework/docs/terms/terminology",hovertext:"Terminology (in/of a Scope): the set of terms that are used within a single Scope to refer to a single Definition, enabling Parties to reason and communicate ideas they have about one or more specific topics."},"terminology")," for which the ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG")," contains ",(0,n.kt)("a",{parentName:"li",href:"mrg-entry@"},"entries"),". Its value must be equal to that found in the ",(0,n.kt)("inlineCode",{parentName:"li"},"vsntag"),"-field of the element in the ",(0,n.kt)("a",{parentName:"li",href:"/docs/tev2/spec-files/saf#versions"},"versions section")," of the ",(0,n.kt)("a",{parentName:"li",href:"@"},"SAF")," from which the ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG")," was generated. NOTE that ",(0,n.kt)("a",{parentName:"li",href:"@"},"versiontags")," that are listed in the ",(0,n.kt)("inlineCode",{parentName:"li"},"altvsntags"),"-field of such an element MUST NOT be used in the ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG"),"-filename.")),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG")," file must be written to the ",(0,n.kt)("a",{parentName:"p",href:"@"},"glossarydir")," of the ",(0,n.kt)("a",{href:"/framework/docs/terms/scope",hovertext:"Scope: the extent of the area or subject matter (which we use, e.g., to define Patterns, Concepts, Terms and Glossaries in, but it serves other purposes as well)."},"scope"),", which is located at ",(0,n.kt)("inlineCode",{parentName:"p"},"<scopedir>/<glossarydir>"),", where"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<scopedir>")," is the home-directory of the ",(0,n.kt)("a",{href:"/framework/docs/terms/scope",hovertext:"Scope: the extent of the area or subject matter (which we use, e.g., to define Patterns, Concepts, Terms and Glossaries in, but it serves other purposes as well)."},"scope"),", and"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"<glossarydir>")," is the path to the directorty where all ",(0,n.kt)("a",{href:"/framework/docs/terms/glossary",hovertext:"Glossary: an alphabetically sorted list of Terms with the (single) meaning it has in (at least) one context."},"glossary"),"-related files are located. Its value can be found in the ",(0,n.kt)("a",{parentName:"li",href:"/docs/tev2/spec-files/saf#terminology"},"scope section")," of the ",(0,n.kt)("a",{parentName:"li",href:"@"},"SAF"),".")),(0,n.kt)("p",null,"After the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG")," file has been written, the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGT")," will create, a ",(0,n.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Symbolic_link"},"symbolic link")," for every ",(0,n.kt)("a",{parentName:"p",href:"@"},"versiontag")," that it finds in the ",(0,n.kt)("inlineCode",{parentName:"p"},"altvsntags"),"-field of the element in the ",(0,n.kt)("a",{parentName:"p",href:"/docs/tev2/spec-files/saf#versions"},"versions section")," of the ",(0,n.kt)("a",{parentName:"p",href:"@"},"SAF")," from which the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG")," was generated. The symbolic link will point to the file that has just been written and contains the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG")," that has just been generated. The name of this symbolic link is ",(0,n.kt)("inlineCode",{parentName:"p"},"mrg.<scopetag>.<altvsntag>.yaml"),", which is the same name as the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG")," file, except that the ",(0,n.kt)("inlineCode",{parentName:"p"},"<vsntag>")," part of that filename is replaced with the value of the ",(0,n.kt)("a",{parentName:"p",href:"@"},"versiontag")," found in the ",(0,n.kt)("inlineCode",{parentName:"p"},"altvsntags"),"-field."),(0,n.kt)("h3",{id:"creating-an-mrg-entry"},"Creating an MRG Entry"),(0,n.kt)("p",null,"An ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG entry")," is either"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"a copy of an (existing) ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG entry")," that is found in an ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG")," that lives in another ",(0,n.kt)("a",{href:"/framework/docs/terms/scope",hovertext:"Scope: the extent of the area or subject matter (which we use, e.g., to define Patterns, Concepts, Terms and Glossaries in, but it serves other purposes as well)."},"scope"),", or"),(0,n.kt)("li",{parentName:"ul"},"it is constructed from a ",(0,n.kt)("a",{parentName:"li",href:"@"},"curated text"),", which lives in a file in (one of the subdirectories of) the ",(0,n.kt)("a",{parentName:"li",href:"@"},"curatedir")," of the current ",(0,n.kt)("a",{href:"/framework/docs/terms/scope",hovertext:"Scope: the extent of the area or subject matter (which we use, e.g., to define Patterns, Concepts, Terms and Glossaries in, but it serves other purposes as well)."},"scope"),", as ",(0,n.kt)("a",{parentName:"li",href:"/docs/tev2/spec-files/saf#terminology"},"specified")," in the ",(0,n.kt)("inlineCode",{parentName:"li"},"curatedir")," field of the ",(0,n.kt)("a",{parentName:"li",href:"@"},"SAF"),".")),(0,n.kt)("h4",{id:"copying-an-mrg-entry-from-an-existing-mrg"},"Copying an MRG Entry from an existing MRG"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"A prerequisite for generating an ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG")," that includes ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG entries")," from ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGs")," that are maintained in other ",(0,n.kt)("a",{href:"/framework/docs/terms/scope",hovertext:"Scope: the extent of the area or subject matter (which we use, e.g., to define Patterns, Concepts, Terms and Glossaries in, but it serves other purposes as well)."},"scopes"),", is that such other ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGs")," must be available in the ",(0,n.kt)("a",{parentName:"p",href:"@"},"glossarydir")," of the ",(0,n.kt)("a",{href:"/framework/docs/terms/scope",hovertext:"Scope: the extent of the area or subject matter (which we use, e.g., to define Patterns, Concepts, Terms and Glossaries in, but it serves other purposes as well)."},"scope")," within which the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGT")," is run. This can be achieved by running the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG importer")," ",(0,n.kt)("a",{parentName:"p",href:"/docs/tev2/spec-tools/mrg-importer"},"tool"),". If the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG")," that is to be generated doesn't include such ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG entries"),", the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG importer")," need not be invoked.")),(0,n.kt)("admonition",{title:"Editor's note",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"this section needs to be reviewed/revisded to ensure it fits with the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG importer")," specs.")),(0,n.kt)("p",null,"In case the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG entry")," is a copy, the ",(0,n.kt)("inlineCode",{parentName:"p"},"vsntag")," ",(0,n.kt)("a",{parentName:"p",href:"/docs/tev2/spec-files/mrg#mrg-entries"},"field")," of that ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG entry")," should be given the value of the ",(0,n.kt)("inlineCode",{parentName:"p"},"vsntag")," field that is found in the ",(0,n.kt)("a",{parentName:"p",href:"/docs/tev2/spec-files/mrg#mrg-terminology"},"'terminology' section")," of the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG")," from which ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG entry")," contents was copied."),(0,n.kt)("h4",{id:"constructing-an-mrg-entry-from-a-curated-text"},"Constructing an MRG Entry from a Curated Text"),(0,n.kt)("p",null,"Constructing an ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRG entry")," from a ",(0,n.kt)("a",{parentName:"p",href:"@"},"curated text")," is done as follows:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"create an empty/new ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG entry"),";"),(0,n.kt)("li",{parentName:"ol"},"if the ",(0,n.kt)("inlineCode",{parentName:"li"},"synonymOf")," field contains a ",(0,n.kt)("a",{parentName:"li",href:"@"},"term identifier")," that ",(0,n.kt)("a",{href:"/framework/docs/terms/identify",hovertext:"Identify: an Act, by or on behalf of a Party, that results in the selection of either (a) a single Partial identity that the party Owns, given some (observed or received) data, or (b) a single Entity from a given set of entities that is the Subject of a specified Partial identity that the party Owns."},"identifies"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"a ",(0,n.kt)("a",{parentName:"li",href:"@"},"curated text")," in the ",(0,n.kt)("a",{href:"/framework/docs/terms/scope",hovertext:"Scope: the extent of the area or subject matter (which we use, e.g., to define Patterns, Concepts, Terms and Glossaries in, but it serves other purposes as well)."},"scope")," in which the ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG")," is being created, then copy the entire front matter of that ",(0,n.kt)("a",{parentName:"li",href:"@"},"curated text")," into the ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG entry"),";",(0,n.kt)("sup",{parentName:"li",id:"fnref-1"},(0,n.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1"))),(0,n.kt)("li",{parentName:"ul"},"an ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG entry")," in an ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG")," other than the ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG")," that is being created, then copy that ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG entry")," into the ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG entry")," that has just been created;"))),(0,n.kt)("li",{parentName:"ol"},"if the ",(0,n.kt)("inlineCode",{parentName:"li"},"synonymOf")," field contains a text that is not a ",(0,n.kt)("a",{parentName:"li",href:"@"},"term identifier"),", raise an ",(0,n.kt)("a",{parentName:"li",href:"#exceptions"},"appropriate warning"),";"),(0,n.kt)("li",{parentName:"ol"},"copy every field in the front-matter of the ",(0,n.kt)("a",{parentName:"li",href:"@"},"curated text")," into the ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG entry"),"; if the field already exists in the ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG entry"),", it will be overwritten;"),(0,n.kt)("li",{parentName:"ol"},"discard every field that has a field name that, when converted into lowercase, matches any of the field names in the table below;"),(0,n.kt)("li",{parentName:"ol"},"add the fields in the below table with the specified contents, as follows:")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Field"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Value(s) that are assigned to the fields"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"scopetag")),(0,n.kt)("td",{parentName:"tr",align:"left"},"overwrite the ",(0,n.kt)("inlineCode",{parentName:"td"},"scopetag")," field with the ",(0,n.kt)("inlineCode",{parentName:"td"},"scopetag")," field as found in the ",(0,n.kt)("inlineCode",{parentName:"td"},"scope")," section of the ",(0,n.kt)("a",{parentName:"td",href:"@"},"SAF"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"locator")),(0,n.kt)("td",{parentName:"tr",align:"left"},"path, relative to ",(0,n.kt)("inlineCode",{parentName:"td"},"scopedir"),"/",(0,n.kt)("inlineCode",{parentName:"td"},"curatedir"),"/, of the ",(0,n.kt)("a",{parentName:"td",href:"@"},"curated text"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"navurl")),(0,n.kt)("td",{parentName:"tr",align:"left"},"path, relative to the URL as specified in the ",(0,n.kt)("inlineCode",{parentName:"td"},"website")," field in the ",(0,n.kt)("a",{parentName:"td",href:"/docs/tev2/spec-files/saf#terminology"},(0,n.kt)("inlineCode",{parentName:"a"},"scope")," section")," of the ",(0,n.kt)("a",{parentName:"td",href:"@"},"SAF"),", where the rendered version of the ",(0,n.kt)("a",{parentName:"td",href:"@"},"curated text")," is located.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"headingids")),(0,n.kt)("td",{parentName:"tr",align:"left"},"a list of the ",(0,n.kt)("a",{parentName:"td",href:"https://www.markdownguide.org/basic-syntax/#headings"},"markdown headings")," and/or ",(0,n.kt)("a",{parentName:"td",href:"https://www.markdownguide.org/extended-syntax/#linking-to-heading-ids"},"heading ids")," that are found in the ",(0,n.kt)("a",{parentName:"td",href:"@"},"curated text"),".")))),(0,n.kt)("h2",{id:"exceptions"},"Exceptions, Warnings, and Logging"),(0,n.kt)("admonition",{title:"Editor's note",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"This section needs to be reviewed/revised so as to enable a consistent way of error checking and logging, similar to what is done in the TRRT")),(0,n.kt)("p",null,"The general principle is that the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGT")," helps its users to do their jobs. This means that errors that terminate the processing are limited to the max, that warnings (perhaps at different 'levels' of detail/severity) are given output whenever possible (yet may be limited by command-line options), and that texts are tailored for the envisaged users of the tool."),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGT")," logs conditions that prevent it from properly:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"obtaining the ",(0,n.kt)("a",{parentName:"li",href:"@"},"scopedir")," from a ",(0,n.kt)("a",{parentName:"li",href:"@"},"scopetag"),";"),(0,n.kt)("li",{parentName:"ul"},"parsing a ",(0,n.kt)("a",{parentName:"li",href:"@"},"curated text")," (e.g. because it is not in the expected format);"),(0,n.kt)("li",{parentName:"ul"},"resolving ",(0,n.kt)("a",{href:"/framework/docs/terms/term",hovertext:"Term: a word or phrase (i.e.: text) that is used in at least one Scope/context to represent a specific Concept."},"terms"),", ",(0,n.kt)("a",{parentName:"li",href:"@"},"scope tags"),", ",(0,n.kt)("a",{parentName:"li",href:"@"},"group tags"),", or ",(0,n.kt)("a",{parentName:"li",href:"@"},"version tags"),";"),(0,n.kt)("li",{parentName:"ul"},"writing the output (e.g. because it has no write-permission for the designated location);"),(0,n.kt)("li",{parentName:"ul"},"etc.;")),(0,n.kt)("p",null,"Also, the ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGT")," provides suggestions that help tool-operators (",(0,n.kt)("a",{parentName:"p",href:"@"},"curators"),") to not only identify, but also fix any problems."),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"@"},"MRGT")," comes with documentation that enables developers to ascertain its correct functioning (e.g. by using a test set of files, test scripts that exercise its parameters, etc.), and also enables them to deploy the tool in a git repo and author/modify CI-pipes to use that deployment."),(0,n.kt)("h2",{id:"notes"},"Notes"),(0,n.kt)("div",{className:"footnotes"},(0,n.kt)("hr",{parentName:"div"}),(0,n.kt)("ol",{parentName:"div"},(0,n.kt)("li",{parentName:"ol",id:"fn-1"},"The algorithm ensures that an ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG entry")," for a ",(0,n.kt)("a",{href:"/framework/docs/terms/term",hovertext:"Term: a word or phrase (i.e.: text) that is used in at least one Scope/context to represent a specific Concept."},"term")," that is a ",(0,n.kt)("a",{parentName:"li",href:"@"},"synonym")," of another ",(0,n.kt)("a",{href:"/framework/docs/terms/term",hovertext:"Term: a word or phrase (i.e.: text) that is used in at least one Scope/context to represent a specific Concept."},"term")," identical to the ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG entry")," for that other ",(0,n.kt)("a",{href:"/framework/docs/terms/term",hovertext:"Term: a word or phrase (i.e.: text) that is used in at least one Scope/context to represent a specific Concept."},"term"),", but if the ",(0,n.kt)("a",{parentName:"li",href:"@"},"curated text")," that specifies the ",(0,n.kt)("a",{parentName:"li",href:"@"},"synonym")," has additional front matter (e.g. a slightly modified ",(0,n.kt)("inlineCode",{parentName:"li"},"glossaryText")," field), that front matter is retained in the ",(0,n.kt)("a",{parentName:"li",href:"@"},"MRG entry"),". It is up to the ",(0,n.kt)("a",{parentName:"li",href:"@"},"author")," of the ",(0,n.kt)("a",{parentName:"li",href:"@"},"curated text")," to make sure this does not pose any problems, and up to the ",(0,n.kt)("a",{parentName:"li",href:"@"},"ICTT")," to do appropriate checks.",(0,n.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}d.isMDXComponent=!0}}]);