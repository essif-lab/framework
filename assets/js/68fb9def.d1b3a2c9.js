"use strict";(self.webpackChunkessif_lab=self.webpackChunkessif_lab||[]).push([[3469],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=l(r),h=a,d=m["".concat(c,".").concat(h)]||m[h]||u[h]||o;return r?n.createElement(d,s(s({ref:t},p),{},{components:r})):n.createElement(d,s({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[m]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},5795:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={term:"term-syntax",termType:"concept",isa:null,glossaryTerm:null,glossaryText:"the criterion that specifies which texts can serve as a [term](@), which is that the text must match with (PCRE) regex [`[A-Za-z0-9s_]+`](https://www.debuggex.com/r/YQppbqxps5jI0t0P).",synonymOf:null,grouptags:"syntax",formPhrases:"term-syntaxes",status:"proposed",created:new Date("2022-08-17T00:00:00.000Z"),updated:new Date("2022-08-17T00:00:00.000Z"),contributors:"RieksJ",attribution:"[eSSIF-Lab](https://essif-lab.github.io/framework)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"},s="Term Syntax",i={unversionedId:"tev2/terms/term-syntax",id:"tev2/terms/term-syntax",title:"Term Syntax",description:"\x3c!--",source:"@site/docs/tev2/terms/term-syntax.md",sourceDirName:"tev2/terms",slug:"/tev2/terms/term-syntax",permalink:"/framework/docs/tev2/terms/term-syntax",draft:!1,editUrl:"https://github.com/essif-lab/framework/blob/master/docs/tev2/terms/term-syntax.md",tags:[],version:"current",lastUpdatedBy:"Rieks",lastUpdatedAt:1689398439,formattedLastUpdatedAt:"Jul 15, 2023",frontMatter:{term:"term-syntax",termType:"concept",isa:null,glossaryTerm:null,glossaryText:"the criterion that specifies which texts can serve as a [term](@), which is that the text must match with (PCRE) regex [`[A-Za-z0-9\\s_]+`](https://www.debuggex.com/r/YQppbqxps5jI0t0P).",synonymOf:null,grouptags:"syntax",formPhrases:"term-syntaxes",status:"proposed",created:"2022-08-17T00:00:00.000Z",updated:"2022-08-17T00:00:00.000Z",contributors:"RieksJ",attribution:"[eSSIF-Lab](https://essif-lab.github.io/framework)",originalLicense:"[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/?ref=chooser-v1)"}},c={},l=[{value:"Summary",id:"summary",level:3},{value:"Purpose",id:"purpose",level:3},{value:"Criterion",id:"criterion",level:3}],p={toc:l},m="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"term-syntax"},"Term Syntax"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"The entire section on Terminology Engine v 2 (TEv2) is still under construction.",(0,a.kt)("br",null),"\nAs TEv2 is not (yet) available, the texts that specify the tool are still 'raw', i.e. not yet processed.",(0,a.kt)("br",null),(0,a.kt)("a",{parentName:"p",href:"@"},"readers")," will need to see through some (currently unprocessed) notational conventions.")),(0,a.kt)("h3",{id:"summary"},"Summary"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Term Syntax")," is is the set of rules that defines the combinations of symbols (characters, texts) that are considered to be correctly structured terms (definition adapted from ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Syntax_(programming_languages)"},"Wikipedia"),")."),(0,a.kt)("h3",{id:"purpose"},"Purpose"),(0,a.kt)("p",null,"The Term Syntax specifications serve to instruct (and help) ",(0,a.kt)("a",{parentName:"p",href:"@"},"authors")," how to correctly write (the ",(0,a.kt)("inlineCode",{parentName:"p"},"term")," field part of) a ",(0,a.kt)("a",{parentName:"p",href:"@"},"Term Ref"),". Also, it enables developers to create tools, e.g. the ",(0,a.kt)("a",{parentName:"p",href:"@"},"TRRT"),", which need to be able to detect and convert this term-syntax - the exact nature of which would depend on the actual tool."),(0,a.kt)("h3",{id:"criterion"},"Criterion"),(0,a.kt)("p",null,"The Term Syntax used within ","[TEv2]"," is the PCRE regex ",(0,a.kt)("a",{parentName:"p",href:"https://www.debuggex.com/r/YQppbqxps5jI0t0P"},(0,a.kt)("inlineCode",{parentName:"a"},"[A-Za-z0-9\\s_]+")),"."))}u.isMDXComponent=!0}}]);