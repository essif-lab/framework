"use strict";(self.webpackChunkessif_lab=self.webpackChunkessif_lab||[]).push([[6237],{7423:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>h});var i=s(5893),a=s(1151);const o={id:"role",displayed_sidebar:"essifLabSideBar",scopetag:"essifLab",termType:"concept",term:"role",formPhrases:["role{ss}"],status:"draft",grouptags:null,hoverText:"Role (of an Entity in some context): a defined set of characteristics that the Entity has in some context, such as responsibilities (Obligations) it may have, Actions (behaviors) it may execute, or pieces of Knowledge that it is expected to have in that context, which are referenced to by a specific (Role-)name.",glossaryTerm:"Role",glossaryText:"a defined set of characteristics that an [entity](@) has in some context, such as [responsibilities](obligation@) it may have, [action](@) (behaviors) it may execute, or pieces of [knowledge](@) that it is expected to have in that context, which are referenced to by a specific [role name](@).",date:20210601},n="Role",r={id:"terms/role",title:"Role",description:"Short Description",source:"@site/docs/terms/role.md",sourceDirName:"terms",slug:"/terms/role",permalink:"/framework/docs/terms/role",draft:!1,unlisted:!1,editUrl:"https://github.com/essif-lab/framework/blob/master/docs/terms/role.md",tags:[],version:"current",lastUpdatedBy:"Ca5e",lastUpdatedAt:1704549625,formattedLastUpdatedAt:"Jan 6, 2024",frontMatter:{id:"role",displayed_sidebar:"essifLabSideBar",scopetag:"essifLab",termType:"concept",term:"role",formPhrases:["role{ss}"],status:"draft",grouptags:null,hoverText:"Role (of an Entity in some context): a defined set of characteristics that the Entity has in some context, such as responsibilities (Obligations) it may have, Actions (behaviors) it may execute, or pieces of Knowledge that it is expected to have in that context, which are referenced to by a specific (Role-)name.",glossaryTerm:"Role",glossaryText:"a defined set of characteristics that an [entity](@) has in some context, such as [responsibilities](obligation@) it may have, [action](@) (behaviors) it may execute, or pieces of [knowledge](@) that it is expected to have in that context, which are referenced to by a specific [role name](@).",date:20210601},sidebar:"essifLabSideBar"},c={},h=[{value:"Short Description",id:"short-description",level:3},{value:"Purpose",id:"purpose",level:3},{value:"Examples",id:"examples",level:3}];function l(e){const t={a:"a",h1:"h1",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"role",children:"Role"}),"\n",(0,i.jsx)(t.h3,{id:"short-description",children:"Short Description"}),"\n",(0,i.jsxs)(t.p,{children:["A ",(0,i.jsx)(t.strong,{children:"Role"})," (of an ",(0,i.jsx)("a",{href:"/framework/docs/terms/entity",hovertext:"Entity: someone or something that is known to exist.",children:"entity"})," in some context) is a named set of characteristics that the entity has, ",(0,i.jsx)("a",{href:"/framework/docs/terms/action",hovertext:"Action: something that is actually done (a 'unit of work' that is executed) by a single Actor (on behalf of a given Party), as a single operation, in a specific context.",children:"actions"})," (behaviors) that it may execute, or pieces of ",(0,i.jsx)("a",{href:"/framework/docs/terms/knowledge",hovertext:"Knowledge: The (intangible) sum of what is known by a specific Party, as well as the familiarity, awareness or understanding of someone or something by that Party.",children:"knowledge"})," that it is expected to have in that context."]}),"\n",(0,i.jsxs)(t.p,{children:["Equivalently, a role can be seen as a (",(0,i.jsx)("a",{href:"/framework/docs/terms/role-name",hovertext:"Role name: name (text) that refers to (and identifies) a Role in a a specific context.",children:"named"}),") class of entities where the classification criteria are specified for the context for which the role is defined. However, it is distinct from the ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Class",children:"class concept"})," in that it is (or rather: its members are) expected to have/exhibit a specific function/behavior in the context for which the role is defined, whereas a class (definition) only specifies the (static) characteristics of its members."]}),"\n",(0,i.jsxs)(t.p,{children:["A role does not exist outside the context for which it is defined. However, while the ",(0,i.jsx)("a",{href:"/framework/docs/terms/role-name",hovertext:"Role name: name (text) that refers to (and identifies) a Role in a a specific context.",children:"name of the role"})," may be used outside that context, it then cannot refer to that role. It is common practice to use the same role name for roles in related contexts. This may be interpreted to imply a relation between these roles, which may or may not be correct. Not being aware of this is a known cause of confusion and misunderstandings."]}),"\n",(0,i.jsx)(t.h3,{id:"purpose",children:"Purpose"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Roles"})," enable us to classify ",(0,i.jsx)("a",{href:"/framework/docs/terms/entity",hovertext:"Entity: someone or something that is known to exist.",children:"entities"})," in a context-dependent manner, and use a single ",(0,i.jsx)("a",{href:"/framework/docs/terms/role-name",hovertext:"Role name: name (text) that refers to (and identifies) a Role in a a specific context.",children:"name"})," for"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["referring to the set of ",(0,i.jsx)("a",{href:"/framework/docs/terms/action",hovertext:"Action: something that is actually done (a 'unit of work' that is executed) by a single Actor (on behalf of a given Party), as a single operation, in a specific context.",children:"actions"})," (behaviors), pieces of ",(0,i.jsx)("a",{href:"/framework/docs/terms/knowledge",hovertext:"Knowledge: The (intangible) sum of what is known by a specific Party, as well as the familiarity, awareness or understanding of someone or something by that Party.",children:"knowledge"}),", and other characteristics that members of the class (are supposed to) have, and"]}),"\n",(0,i.jsx)(t.li,{children:"referring to a (still) unspecified entity in that class."}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["in a technical context, a role may refer to a set of permissions and a set of users (",(0,i.jsx)(t.a,{href:"https://csrc.nist.gov/projects/role-based-access-control",children:"NIST RBAC standard"}),")"]}),"\n",(0,i.jsxs)(t.li,{children:["in an enterprise context, a role may refer to an organizational function that employees can have, and that come with benefits, salary and responsibilities, e.g. '",(0,i.jsx)("a",{href:"/framework/docs/terms/management",hovertext:"Management: the act or process of managing or actually realizing of (the results associated with) a set of Objectives by the Owner of these Objectives.",children:"manager"}),"', '",(0,i.jsx)("a",{href:"/framework/docs/terms/controller",hovertext:"Controller (of an Entity): the role that an Actor performs as it is executing actions on that Entity for the purpose of ensuring that the Entity will act/behave, or be used, in a particular way.",children:"controller"}),"', 'salesperson'"]}),"\n",(0,i.jsxs)(t.li,{children:["in a UML class diagram, a role name that is specified for a UML class in a relation (association) that it has with another class, refers to a specific (set of) behaviors that elements from this class are expected to exhibit in a particular context. See ",(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Role_Class_Model",children:"Role Class Model"})," for more information."]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},1151:(e,t,s)=>{s.d(t,{Z:()=>r,a:()=>n});var i=s(7294);const a={},o=i.createContext(a);function n(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:n(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);